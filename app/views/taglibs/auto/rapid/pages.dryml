<!-- AUTOMATICALLY GENERATED FILE - DO NOT EDIT -->


<!-- ====== Main Navigation ====== -->

<def tag="main-nav">
  <navigation class="main-nav" merge-attrs param="default">
    <nav-item href="#{base_url}/">Home</nav-item>
    <nav-item with="&FlowType"><ht key="flow_type.nav_item" count="100"><model-name-human count="100"/></ht></nav-item>
    <nav-item with="&FunctionType"><ht key="function_type.nav_item" count="100"><model-name-human count="100"/></ht></nav-item>
    <nav-item with="&Layer"><ht key="layer.nav_item" count="100"><model-name-human count="100"/></ht></nav-item>
    <nav-item with="&StateMachine"><ht key="state_machine.nav_item" count="100"><model-name-human count="100"/></ht></nav-item>
    <nav-item with="&StateMachineTransition"><ht key="state_machine_transition.nav_item" count="100"><model-name-human count="100"/></ht></nav-item>
  </navigation>
</def>




<!-- ====== Connector Pages ====== -->

<def tag="index-page" for="Connector">
  <page merge title="#{ht 'connector.index.title', :default=>[model.model_name.human(:count=>100)] }">
    <body: class="index-page connector" param/>

    <content-header: param>
      <h2 param="heading">
        <ht key="connector.index.heading">
          <model-name-human model="&model"/>
        </ht>
      </h2>

      <p param="count" if>
        <ht key="connector.collection.count" count="&collection_count">
          <count summary/>
        </ht>
      </p>
    </content-header:>

    <content-body: param>
      <a action="new" to="&model" param="new-link">
        <ht key="connector.actions.new">New Connector</ht>
      </a>

      <page-nav param="top-page-nav"/>

      <collection param/>

      <page-nav param="bottom-page-nav"/>


    </content-body:>
  </page>
</def>


<def tag="new-page" for="Connector">
  <page merge title="#{ht 'connector.new.title', :default=>[' New Connector'] }">
    <body: class="new-page connector" param/>

    <content-header: param>
      <h2 param="heading">
        <ht key="connector.new.heading">
          New Connector
        </ht>
      </h2>
    </content-header:>

    <content-body: param>
      <form param>
        <submit: label="#{ht 'connector.actions.create', :default=>['Create Connector']}"/>
      </form>
    </content-body:>
  </page>
</def>


<def tag="show-page" for="Connector">
  <page merge title="#{ht 'connector.show.title', :default=>['Connector'], :name => name(:no_wrapper => true) }" >

    <body: class="show-page connector" param/>

    <content-header: param>
      <h2 param="heading">
        <ht key="connector.show.heading" name="#{name(:no_wrapper => true)}">
          Connector <name/>
        </ht>
      </h2>

      <record-flags fields="" param/>

      <a action="edit" if="&can_edit?" param="edit-link">
        <ht key="connector.actions.edit" name="#{name(:no_wrapper => true)}">
          Edit Connector
        </ht>
      </a>
    </content-header:>

    <content-body: param>
      <field-list fields="position, sub_system" param/>
      <section param="collection-section">
        <h3 param="collection-heading">
          <ht key="sub_system_flow.collection.heading" count="&this.sub_system_flows.count" >
            <human-collection-name collection="sub_system_flows" your/>
          </ht>
        </h3>

        <sortable-collection:sub_system_flows param="collection"/>

        <section param="add-to-collection" if="&can_create?(@connector.sub_system_flows)">
          <h3 param="add-form-heading">
            <ht key="sub_system_flow.collection.add_form_heading" count="1">
              Add a Sub System Flow
            </ht>
          </h3>
          <form with="&@sub_system_flow || new_for_current_user(@connector.sub_system_flows)" owner="connector" without-cancel param>
            <field-list: skip="connector"/>
            <submit: label="#{ht 'sub_system_flow.actions.add', :default=>['Add'] }"/>
          </form>
        </section>
      </section>
    </content-body:>

    <aside: param>
      <section param="input_flows-collection-section">
        <h3 param="input_flows-collection-heading">
          <ht key="sub_system_flow.collection.heading" count="&this.input_flows.count" >
            <human-collection-name collection="input_flows" your/>
          </ht>
        </h3>
        <collection:input_flows  param="input_flows-collection"/>
      </section>
    </aside:>

  </page>
</def>


<def tag="edit-page" for="Connector">
  <page merge title="#{ht 'connector.edit.title', :default=>['Edit Connector'], :name => name(:no_wrapper => true) }">

    <body: class="edit-page connector" param/>

    <content-header: param>
      <h2 param="heading">
        <ht key="connector.edit.heading" name="#{name(:no_wrapper => true)}">
          Edit Connector
        </ht>
      </h2>
      <delete-button label="#{ht 'connector.actions.delete', :default=>['Remove This Connector']}" param/>
    </content-header:>

    <content-body: param>
      <form param/>
    </content-body:>

  </page>
</def>



<def tag="new-for-sub-system-page" polymorphic/>
<def tag="new-for-sub-system-page" for="Connector">
  <page merge title="#{ht 'connector.new_for_owner.title', :default=>['New Connector for']} #{name :with => @sub_system}">
    <body: class="new-for-owner-page  connector" param/>

    <content-header: param>
      <h2 param="heading">
        <ht key="connector.new_for_owner.heading">
          New Connector
        </ht>
      </h2>
      <h3 param="subheading">
        <ht key="connector.new_for_owner.subheading">
          For:
        </ht>
        <a with="&@sub_system"/>
      </h3>
    </content-header:>

    <content-body: param>
      <form owner="sub_system" method="post" param>
        <field-list: skip="sub_system"/>
        <submit: label="#{ht 'connector.actions.create', :default=>['Create Connector']}"/>
      </form>
    </content-body:>
  </page>
</def>





<!-- ====== FlowType Pages ====== -->

<def tag="index-page" for="FlowType">
  <page merge title="#{ht 'flow_type.index.title', :default=>[model.model_name.human(:count=>100)] }">
    <body: class="index-page flow-type" param/>

    <content-header: param>
      <h2 param="heading">
        <ht key="flow_type.index.heading">
          <model-name-human model="&model"/>
        </ht>
      </h2>

      <p param="count" if>
        <ht key="flow_type.collection.count" count="&collection_count">
          <count summary/>
        </ht>
      </p>
    </content-header:>

    <content-body: param>
      <a action="new" to="&model" param="new-link">
        <ht key="flow_type.actions.new">New Flow type</ht>
      </a>

      <page-nav param="top-page-nav"/>

      <collection param/>

      <page-nav param="bottom-page-nav"/>


    </content-body:>
  </page>
</def>


<def tag="new-page" for="FlowType">
  <page merge title="#{ht 'flow_type.new.title', :default=>[' New Flow type'] }">
    <body: class="new-page flow-type" param/>

    <content-header: param>
      <h2 param="heading">
        <ht key="flow_type.new.heading">
          New Flow type
        </ht>
      </h2>
    </content-header:>

    <content-body: param>
      <form param>
        <submit: label="#{ht 'flow_type.actions.create', :default=>['Create Flow type']}"/>
      </form>
    </content-body:>
  </page>
</def>


<def tag="show-page" for="FlowType">
  <page merge title="#{ht 'flow_type.show.title', :default=>['Flow type'], :name => name(:no_wrapper => true) }" without-aside >

    <body: class="show-page flow-type" param/>

    <content-header: param>
      <h2 param="heading">
        <ht key="flow_type.show.heading" name="#{name(:no_wrapper => true)}">
          Flow type <name/>
        </ht>
      </h2>

      <record-flags fields="enable_input, enable_output, paso_por_referencia, tipo_propio, tipo_fantasma" param/>

      <a action="edit" if="&can_edit?" param="edit-link">
        <ht key="flow_type.actions.edit" name="#{name(:no_wrapper => true)}">
          Edit Flow type
        </ht>
      </a>
    </content-header:>

    <content-body: param>
      <field-list fields="c_type, c_input_patron, c_output_patron" param/>
    </content-body:>

  </page>
</def>


<def tag="edit-page" for="FlowType">
  <page merge title="#{ht 'flow_type.edit.title', :default=>['Edit Flow type'], :name => name(:no_wrapper => true) }">

    <body: class="edit-page flow-type" param/>

    <content-header: param>
      <h2 param="heading">
        <ht key="flow_type.edit.heading" name="#{name(:no_wrapper => true)}">
          Edit Flow type
        </ht>
      </h2>
      <delete-button label="#{ht 'flow_type.actions.delete', :default=>['Remove This Flow type']}" param/>
    </content-header:>

    <content-body: param>
      <form param/>
    </content-body:>

  </page>
</def>





<!-- ====== Flow Pages ====== -->

<def tag="index-page" for="Flow">
  <page merge title="#{ht 'flow.index.title', :default=>[model.model_name.human(:count=>100)] }">
    <body: class="index-page flow" param/>

    <content-header: param>
      <h2 param="heading">
        <ht key="flow.index.heading">
          <model-name-human model="&model"/>
        </ht>
      </h2>

      <p param="count" if>
        <ht key="flow.collection.count" count="&collection_count">
          <count summary/>
        </ht>
      </p>
    </content-header:>

    <content-body: param>
      <a action="new" to="&model" param="new-link">
        <ht key="flow.actions.new">New Flow</ht>
      </a>

      <page-nav param="top-page-nav"/>

      <collection param/>

      <page-nav param="bottom-page-nav"/>


    </content-body:>
  </page>
</def>


<def tag="new-page" for="Flow">
  <page merge title="#{ht 'flow.new.title', :default=>[' New Flow'] }">
    <body: class="new-page flow" param/>

    <content-header: param>
      <h2 param="heading">
        <ht key="flow.new.heading">
          New Flow
        </ht>
      </h2>
    </content-header:>

    <content-body: param>
      <form param>
        <submit: label="#{ht 'flow.actions.create', :default=>['Create Flow']}"/>
      </form>
    </content-body:>
  </page>
</def>


<def tag="show-page" for="Flow">
  <page merge title="#{ht 'flow.show.title', :default=>['Flow'], :name => name(:no_wrapper => true) }" without-aside >

    <body: class="show-page flow" param/>

    <content-header: param>
      <h2 param="heading">
        <ht key="flow.show.heading" name="#{name(:no_wrapper => true)}">
          Flow <name/>
        </ht>
      </h2>

      <record-flags fields="" param/>

      <a action="edit" if="&can_edit?" param="edit-link">
        <ht key="flow.actions.edit" name="#{name(:no_wrapper => true)}">
          Edit Flow
        </ht>
      </a>
    </content-header:>

    <content-body: param>
      <field-list fields="flow_type, project" param/>
      <section param="collection-section">
        <h3 param="collection-heading">
          <ht key="sub_system_flow.collection.heading" count="&this.sub_system_flows.count" >
            <human-collection-name collection="sub_system_flows" your/>
          </ht>
        </h3>

        <collection:sub_system_flows param/>
      </section>
    </content-body:>

  </page>
</def>


<def tag="edit-page" for="Flow">
  <page merge title="#{ht 'flow.edit.title', :default=>['Edit Flow'], :name => name(:no_wrapper => true) }">

    <body: class="edit-page flow" param/>

    <content-header: param>
      <h2 param="heading">
        <ht key="flow.edit.heading" name="#{name(:no_wrapper => true)}">
          Edit Flow
        </ht>
      </h2>
      <delete-button label="#{ht 'flow.actions.delete', :default=>['Remove This Flow']}" param/>
    </content-header:>

    <content-body: param>
      <form param/>
    </content-body:>

  </page>
</def>



<def tag="new-for-project-page" polymorphic/>
<def tag="new-for-project-page" for="Flow">
  <page merge title="#{ht 'flow.new_for_owner.title', :default=>['New Flow for']} #{name :with => @project}">
    <body: class="new-for-owner-page  flow" param/>

    <content-header: param>
      <h2 param="heading">
        <ht key="flow.new_for_owner.heading">
          New Flow
        </ht>
      </h2>
      <h3 param="subheading">
        <ht key="flow.new_for_owner.subheading">
          For:
        </ht>
        <a with="&@project"/>
      </h3>
    </content-header:>

    <content-body: param>
      <form owner="project" method="post" param>
        <field-list: skip="project"/>
        <submit: label="#{ht 'flow.actions.create', :default=>['Create Flow']}"/>
      </form>
    </content-body:>
  </page>
</def>





<!-- ====== FunctionSubSystem Pages ====== -->

<def tag="index-page" for="FunctionSubSystem">
  <page merge title="#{ht 'function_sub_system.index.title', :default=>[model.model_name.human(:count=>100)] }">
    <body: class="index-page function-sub-system" param/>

    <content-header: param>
      <h2 param="heading">
        <ht key="function_sub_system.index.heading">
          <model-name-human model="&model"/>
        </ht>
      </h2>

      <p param="count" if>
        <ht key="function_sub_system.collection.count" count="&collection_count">
          <count summary/>
        </ht>
      </p>
    </content-header:>

    <content-body: param>

      <page-nav param="top-page-nav"/>

      <collection param/>

      <page-nav param="bottom-page-nav"/>


    </content-body:>
  </page>
</def>


<def tag="new-page" for="FunctionSubSystem">
  <page merge title="#{ht 'function_sub_system.new.title', :default=>[' New Function sub system'] }">
    <body: class="new-page function-sub-system" param/>

    <content-header: param>
      <h2 param="heading">
        <ht key="function_sub_system.new.heading">
          New Function sub system
        </ht>
      </h2>
    </content-header:>

    <content-body: param>
      <form param>
        <submit: label="#{ht 'function_sub_system.actions.create', :default=>['Create Function sub system']}"/>
      </form>
    </content-body:>
  </page>
</def>


<def tag="show-page" for="FunctionSubSystem">
  <page merge title="#{ht 'function_sub_system.show.title', :default=>['Function sub system'], :name => name(:no_wrapper => true) }" >

    <body: class="show-page function-sub-system" param/>

    <content-header: param>
      <h2 param="heading">
        <ht key="function_sub_system.show.heading" name="#{name(:no_wrapper => true)}">
          Function sub system <name/>
        </ht>
      </h2>

      <record-flags fields="implementacion" param/>

      <a action="edit" if="&can_edit?" param="edit-link">
        <ht key="function_sub_system.actions.edit" name="#{name(:no_wrapper => true)}">
          Edit Function sub system
        </ht>
      </a>
    </content-header:>

    <content-body: param>
      <field-list fields="position, function, sub_system" param/>
      <section param="collection-section">
        <h3 param="collection-heading">
          <ht key="state_machine.collection.heading" count="&this.state_machines.count" >
            <human-collection-name collection="state_machines" your/>
          </ht>
        </h3>

        <collection:state_machines param/>

        <a:state_machines action="new" if="&can_create?(@function_sub_system.state_machines)" param="new-link">
          <ht key="state_machine.actions.new" count="1">
            New State Machine
          </ht>
        </a:state_machines>
      </section>
    </content-body:>

    <aside: param>
      <section param="state_machine_conditions-collection-section">
        <h3 param="state_machine_conditions-collection-heading">
          <ht key="state_machine_condition.collection.heading" count="&this.state_machine_conditions.count" >
            <human-collection-name collection="state_machine_conditions" your/>
          </ht>
        </h3>
        <collection:state_machine_conditions  param="state_machine_conditions-collection"/>
      </section>
      <section param="state_machine_actions-collection-section">
        <h3 param="state_machine_actions-collection-heading">
          <ht key="state_machine_action.collection.heading" count="&this.state_machine_actions.count" >
            <human-collection-name collection="state_machine_actions" your/>
          </ht>
        </h3>
        <collection:state_machine_actions  param="state_machine_actions-collection"/>
      </section>
    </aside:>

  </page>
</def>


<def tag="edit-page" for="FunctionSubSystem">
  <page merge title="#{ht 'function_sub_system.edit.title', :default=>['Edit Function sub system'], :name => name(:no_wrapper => true) }">

    <body: class="edit-page function-sub-system" param/>

    <content-header: param>
      <h2 param="heading">
        <ht key="function_sub_system.edit.heading" name="#{name(:no_wrapper => true)}">
          Edit Function sub system
        </ht>
      </h2>
      <delete-button label="#{ht 'function_sub_system.actions.delete', :default=>['Remove This Function sub system']}" param/>
    </content-header:>

    <content-body: param>
      <form param/>
    </content-body:>

  </page>
</def>



<def tag="new-for-sub-system-page" polymorphic/>
<def tag="new-for-sub-system-page" for="FunctionSubSystem">
  <page merge title="#{ht 'function_sub_system.new_for_owner.title', :default=>['New Function sub system for']} #{name :with => @sub_system}">
    <body: class="new-for-owner-page  function-sub-system" param/>

    <content-header: param>
      <h2 param="heading">
        <ht key="function_sub_system.new_for_owner.heading">
          New Function Sub System
        </ht>
      </h2>
      <h3 param="subheading">
        <ht key="function_sub_system.new_for_owner.subheading">
          For:
        </ht>
        <a with="&@sub_system"/>
      </h3>
    </content-header:>

    <content-body: param>
      <form owner="sub_system" method="post" param>
        <field-list: skip="sub_system"/>
        <submit: label="#{ht 'function_sub_system.actions.create', :default=>['Create Function sub system']}"/>
      </form>
    </content-body:>
  </page>
</def>



<def tag="new-for-function-page" polymorphic/>
<def tag="new-for-function-page" for="FunctionSubSystem">
  <page merge title="#{ht 'function_sub_system.new_for_owner.title', :default=>['New Function sub system for']} #{name :with => @function}">
    <body: class="new-for-owner-page  function-sub-system" param/>

    <content-header: param>
      <h2 param="heading">
        <ht key="function_sub_system.new_for_owner.heading">
          New Function Sub System
        </ht>
      </h2>
      <h3 param="subheading">
        <ht key="function_sub_system.new_for_owner.subheading">
          For:
        </ht>
        <a with="&@function"/>
      </h3>
    </content-header:>

    <content-body: param>
      <form owner="function" method="post" param>
        <field-list: skip="function"/>
        <submit: label="#{ht 'function_sub_system.actions.create', :default=>['Create Function sub system']}"/>
      </form>
    </content-body:>
  </page>
</def>





<!-- ====== FunctionType Pages ====== -->

<def tag="index-page" for="FunctionType">
  <page merge title="#{ht 'function_type.index.title', :default=>[model.model_name.human(:count=>100)] }">
    <body: class="index-page function-type" param/>

    <content-header: param>
      <h2 param="heading">
        <ht key="function_type.index.heading">
          <model-name-human model="&model"/>
        </ht>
      </h2>

      <p param="count" if>
        <ht key="function_type.collection.count" count="&collection_count">
          <count summary/>
        </ht>
      </p>
    </content-header:>

    <content-body: param>
      <a action="new" to="&model" param="new-link">
        <ht key="function_type.actions.new">New Function type</ht>
      </a>

      <page-nav param="top-page-nav"/>

      <collection param/>

      <page-nav param="bottom-page-nav"/>


    </content-body:>
  </page>
</def>


<def tag="new-page" for="FunctionType">
  <page merge title="#{ht 'function_type.new.title', :default=>[' New Function type'] }">
    <body: class="new-page function-type" param/>

    <content-header: param>
      <h2 param="heading">
        <ht key="function_type.new.heading">
          New Function type
        </ht>
      </h2>
    </content-header:>

    <content-body: param>
      <form param>
        <submit: label="#{ht 'function_type.actions.create', :default=>['Create Function type']}"/>
      </form>
    </content-body:>
  </page>
</def>


<def tag="show-page" for="FunctionType">
  <page merge title="#{ht 'function_type.show.title', :default=>['Function type'], :name => name(:no_wrapper => true) }" without-aside >

    <body: class="show-page function-type" param/>

    <content-header: param>
      <h2 param="heading">
        <ht key="function_type.show.heading" name="#{name(:no_wrapper => true)}">
          Function type <name/>
        </ht>
      </h2>

      <record-flags fields="" param/>

      <a action="edit" if="&can_edit?" param="edit-link">
        <ht key="function_type.actions.edit" name="#{name(:no_wrapper => true)}">
          Edit Function type
        </ht>
      </a>
    </content-header:>

    <content-body: param>
      <view:description param="description" />
      <field-list fields="estimated_days" param/>
    </content-body:>

  </page>
</def>


<def tag="edit-page" for="FunctionType">
  <page merge title="#{ht 'function_type.edit.title', :default=>['Edit Function type'], :name => name(:no_wrapper => true) }">

    <body: class="edit-page function-type" param/>

    <content-header: param>
      <h2 param="heading">
        <ht key="function_type.edit.heading" name="#{name(:no_wrapper => true)}">
          Edit Function type
        </ht>
      </h2>
      <delete-button label="#{ht 'function_type.actions.delete', :default=>['Remove This Function type']}" param/>
    </content-header:>

    <content-body: param>
      <form param/>
    </content-body:>

  </page>
</def>





<!-- ====== Function Pages ====== -->

<def tag="index-page" for="Function">
  <page merge title="#{ht 'function.index.title', :default=>[model.model_name.human(:count=>100)] }">
    <body: class="index-page function" param/>

    <content-header: param>
      <h2 param="heading">
        <ht key="function.index.heading">
          <model-name-human model="&model"/>
        </ht>
      </h2>

      <p param="count" if>
        <ht key="function.collection.count" count="&collection_count">
          <count summary/>
        </ht>
      </p>
    </content-header:>

    <content-body: param>
      <a action="new" to="&model" param="new-link">
        <ht key="function.actions.new">New Function</ht>
      </a>

      <page-nav param="top-page-nav"/>

      <collection param/>

      <page-nav param="bottom-page-nav"/>


    </content-body:>
  </page>
</def>


<def tag="new-page" for="Function">
  <page merge title="#{ht 'function.new.title', :default=>[' New Function'] }">
    <body: class="new-page function" param/>

    <content-header: param>
      <h2 param="heading">
        <ht key="function.new.heading">
          New Function
        </ht>
      </h2>
    </content-header:>

    <content-body: param>
      <form param>
        <submit: label="#{ht 'function.actions.create', :default=>['Create Function']}"/>
      </form>
    </content-body:>
  </page>
</def>


<def tag="show-page" for="Function">
  <page merge title="#{ht 'function.show.title', :default=>['Function'], :name => name(:no_wrapper => true) }" without-aside >

    <body: class="show-page function" param/>

    <content-header: param>
      <h2 param="heading">
        <ht key="function.show.heading" name="#{name(:no_wrapper => true)}">
          Function <name/>
        </ht>
      </h2>

      <record-flags fields="" param/>

      <a action="edit" if="&can_edit?" param="edit-link">
        <ht key="function.actions.edit" name="#{name(:no_wrapper => true)}">
          Edit Function
        </ht>
      </a>
    </content-header:>

    <content-body: param>
      <view:description param="description" />
      <field-list fields="ident, function_type, project" param/>
      <section param="collection-section">
        <h3 param="collection-heading">
          <ht key="function_sub_system.collection.heading" count="&this.function_sub_systems.count" >
            <human-collection-name collection="function_sub_systems" your/>
          </ht>
        </h3>

        <collection:function_sub_systems param/>

        <a:function_sub_systems action="new" if="&can_create?(@function.function_sub_systems)" param="new-link">
          <ht key="function_sub_system.actions.new" count="1">
            New Function Sub System
          </ht>
        </a:function_sub_systems>
      </section>
    </content-body:>

  </page>
</def>


<def tag="edit-page" for="Function">
  <page merge title="#{ht 'function.edit.title', :default=>['Edit Function'], :name => name(:no_wrapper => true) }">

    <body: class="edit-page function" param/>

    <content-header: param>
      <h2 param="heading">
        <ht key="function.edit.heading" name="#{name(:no_wrapper => true)}">
          Edit Function
        </ht>
      </h2>
      <delete-button label="#{ht 'function.actions.delete', :default=>['Remove This Function']}" param/>
    </content-header:>

    <content-body: param>
      <form param/>
    </content-body:>

  </page>
</def>



<def tag="new-for-project-page" polymorphic/>
<def tag="new-for-project-page" for="Function">
  <page merge title="#{ht 'function.new_for_owner.title', :default=>['New Function for']} #{name :with => @project}">
    <body: class="new-for-owner-page  function" param/>

    <content-header: param>
      <h2 param="heading">
        <ht key="function.new_for_owner.heading">
          New Function
        </ht>
      </h2>
      <h3 param="subheading">
        <ht key="function.new_for_owner.subheading">
          For:
        </ht>
        <a with="&@project"/>
      </h3>
    </content-header:>

    <content-body: param>
      <form owner="project" method="post" param>
        <field-list: skip="project"/>
        <submit: label="#{ht 'function.actions.create', :default=>['Create Function']}"/>
      </form>
    </content-body:>
  </page>
</def>





<!-- ====== Layer Pages ====== -->

<def tag="index-page" for="Layer">
  <page merge title="#{ht 'layer.index.title', :default=>[model.model_name.human(:count=>100)] }">
    <body: class="index-page layer" param/>

    <content-header: param>
      <h2 param="heading">
        <ht key="layer.index.heading">
          <model-name-human model="&model"/>
        </ht>
      </h2>

      <p param="count" if>
        <ht key="layer.collection.count" count="&collection_count">
          <count summary/>
        </ht>
      </p>
    </content-header:>

    <content-body: param>
      <a action="new" to="&model" param="new-link">
        <ht key="layer.actions.new">New Layer</ht>
      </a>

      <page-nav param="top-page-nav"/>

      <collection param/>

      <page-nav param="bottom-page-nav"/>


    </content-body:>
  </page>
</def>


<def tag="new-page" for="Layer">
  <page merge title="#{ht 'layer.new.title', :default=>[' New Layer'] }">
    <body: class="new-page layer" param/>

    <content-header: param>
      <h2 param="heading">
        <ht key="layer.new.heading">
          New Layer
        </ht>
      </h2>
    </content-header:>

    <content-body: param>
      <form param>
        <submit: label="#{ht 'layer.actions.create', :default=>['Create Layer']}"/>
      </form>
    </content-body:>
  </page>
</def>


<def tag="show-page" for="Layer">
  <page merge title="#{ht 'layer.show.title', :default=>['Layer'], :name => name(:no_wrapper => true) }" without-aside >

    <body: class="show-page layer" param/>

    <content-header: param>
      <h2 param="heading">
        <ht key="layer.show.heading" name="#{name(:no_wrapper => true)}">
          Layer <name/>
        </ht>
      </h2>

      <record-flags fields="" param/>

      <a action="edit" if="&can_edit?" param="edit-link">
        <ht key="layer.actions.edit" name="#{name(:no_wrapper => true)}">
          Edit Layer
        </ht>
      </a>
    </content-header:>

    <content-body: param>
      <field-list fields="level" param/>
    </content-body:>

  </page>
</def>


<def tag="edit-page" for="Layer">
  <page merge title="#{ht 'layer.edit.title', :default=>['Edit Layer'], :name => name(:no_wrapper => true) }">

    <body: class="edit-page layer" param/>

    <content-header: param>
      <h2 param="heading">
        <ht key="layer.edit.heading" name="#{name(:no_wrapper => true)}">
          Edit Layer
        </ht>
      </h2>
      <delete-button label="#{ht 'layer.actions.delete', :default=>['Remove This Layer']}" param/>
    </content-header:>

    <content-body: param>
      <form param/>
    </content-body:>

  </page>
</def>





<!-- ====== NodeEdge Pages ====== -->

<def tag="index-page" for="NodeEdge">
  <page merge title="#{ht 'node_edge.index.title', :default=>[model.model_name.human(:count=>100)] }">
    <body: class="index-page node-edge" param/>

    <content-header: param>
      <h2 param="heading">
        <ht key="node_edge.index.heading">
          <model-name-human model="&model"/>
        </ht>
      </h2>

      <p param="count" if>
        <ht key="node_edge.collection.count" count="&collection_count">
          <count summary/>
        </ht>
      </p>
    </content-header:>

    <content-body: param>

      <page-nav param="top-page-nav"/>

      <collection param/>

      <page-nav param="bottom-page-nav"/>


    </content-body:>
  </page>
</def>


<def tag="new-page" for="NodeEdge">
  <page merge title="#{ht 'node_edge.new.title', :default=>[' New Node edge'] }">
    <body: class="new-page node-edge" param/>

    <content-header: param>
      <h2 param="heading">
        <ht key="node_edge.new.heading">
          New Node edge
        </ht>
      </h2>
    </content-header:>

    <content-body: param>
      <form param>
        <submit: label="#{ht 'node_edge.actions.create', :default=>['Create Node edge']}"/>
      </form>
    </content-body:>
  </page>
</def>


<def tag="show-page" for="NodeEdge">
  <page merge title="#{ht 'node_edge.show.title', :default=>['Node edge'], :name => name(:no_wrapper => true) }" without-aside >

    <body: class="show-page node-edge" param/>

    <content-header: param>
      <h2 param="heading">
        <ht key="node_edge.show.heading" name="#{name(:no_wrapper => true)}">
          Node edge <name/>
        </ht>
      </h2>

      <record-flags fields="" param/>

      <a:source param="creator-link"/>
    </content-header:>

    <content-body: param>
      <field-list fields="position, destination" param/>
    </content-body:>

  </page>
</def>


<def tag="edit-page" for="NodeEdge">
  <page merge title="#{ht 'node_edge.edit.title', :default=>['Edit Node edge'], :name => name(:no_wrapper => true) }">

    <body: class="edit-page node-edge" param/>

    <content-header: param>
      <h2 param="heading">
        <ht key="node_edge.edit.heading" name="#{name(:no_wrapper => true)}">
          Edit Node edge
        </ht>
      </h2>
      <delete-button label="#{ht 'node_edge.actions.delete', :default=>['Remove This Node edge']}" param/>
    </content-header:>

    <content-body: param>
      <form param/>
    </content-body:>

  </page>
</def>





<!-- ====== ProjectMembership Pages ====== -->

<def tag="index-page" for="ProjectMembership">
  <page merge title="#{ht 'project_membership.index.title', :default=>[model.model_name.human(:count=>100)] }">
    <body: class="index-page project-membership" param/>

    <content-header: param>
      <h2 param="heading">
        <ht key="project_membership.index.heading">
          <model-name-human model="&model"/>
        </ht>
      </h2>

      <p param="count" if>
        <ht key="project_membership.collection.count" count="&collection_count">
          <count summary/>
        </ht>
      </p>
    </content-header:>

    <content-body: param>

      <page-nav param="top-page-nav"/>

      <collection param/>

      <page-nav param="bottom-page-nav"/>


      <div param="new-form">
        <h3 param="new-form-heading">
          <ht key="project_membership.form.new.heading">New Project membership</ht>
        </h3>
        <form with="&@invalid_record || new_for_current_user(ProjectMembership)" param/>
      </div>

    </content-body:>
  </page>
</def>


<def tag="new-page" for="ProjectMembership">
  <page merge title="#{ht 'project_membership.new.title', :default=>[' New Project membership'] }">
    <body: class="new-page project-membership" param/>

    <content-header: param>
      <h2 param="heading">
        <ht key="project_membership.new.heading">
          New Project membership
        </ht>
      </h2>
    </content-header:>

    <content-body: param>
      <form param>
        <submit: label="#{ht 'project_membership.actions.create', :default=>['Create Project membership']}"/>
      </form>
    </content-body:>
  </page>
</def>


<def tag="show-page" for="ProjectMembership">
  <page merge title="#{ht 'project_membership.show.title', :default=>['Project membership'], :name => name(:no_wrapper => true) }" without-aside >

    <body: class="show-page project-membership" param/>

    <content-header: param>
      <h2 param="heading">
        <ht key="project_membership.show.heading" name="#{name(:no_wrapper => true)}">
          Project membership <name/>
        </ht>
      </h2>

      <record-flags fields="contributor" param/>
    </content-header:>

    <content-body: param>
      <field-list fields="maximum_layer, project, user" param/>
    </content-body:>

  </page>
</def>


<def tag="edit-page" for="ProjectMembership">
  <page merge title="#{ht 'project_membership.edit.title', :default=>['Edit Project membership'], :name => name(:no_wrapper => true) }">

    <body: class="edit-page project-membership" param/>

    <content-header: param>
      <h2 param="heading">
        <ht key="project_membership.edit.heading" name="#{name(:no_wrapper => true)}">
          Edit Project membership
        </ht>
      </h2>
      <delete-button label="#{ht 'project_membership.actions.delete', :default=>['Remove This Project membership']}" param/>
    </content-header:>

    <content-body: param>
      <form param/>
    </content-body:>

  </page>
</def>





<!-- ====== Project Pages ====== -->

<def tag="index-page" for="Project">
  <page merge title="#{ht 'project.index.title', :default=>[model.model_name.human(:count=>100)] }">
    <body: class="index-page project" param/>

    <content-header: param>
      <h2 param="heading">
        <ht key="project.index.heading">
          <model-name-human model="&model"/>
        </ht>
      </h2>

      <p param="count" if>
        <ht key="project.collection.count" count="&collection_count">
          <count summary/>
        </ht>
      </p>
    </content-header:>

    <content-body: param>

      <page-nav param="top-page-nav"/>

      <collection param/>

      <page-nav param="bottom-page-nav"/>


    </content-body:>
  </page>
</def>


<def tag="new-page" for="Project">
  <page merge title="#{ht 'project.new.title', :default=>[' New Project'] }">
    <body: class="new-page project" param/>

    <content-header: param>
      <h2 param="heading">
        <ht key="project.new.heading">
          New Project
        </ht>
      </h2>
    </content-header:>

    <content-body: param>
      <form param>
        <submit: label="#{ht 'project.actions.create', :default=>['Create Project']}"/>
      </form>
    </content-body:>
  </page>
</def>


<def tag="show-page" for="Project">
  <page merge title="#{ht 'project.show.title', :default=>['Project'], :name => name(:no_wrapper => true) }" >

    <body: class="show-page project" param/>

    <content-header: param>
      <h2 param="heading">
        <ht key="project.show.heading" name="#{name(:no_wrapper => true)}">
          Project <name/>
        </ht>
      </h2>

      <record-flags fields="" param/>

      <a:owner param="creator-link"/>

      <a action="edit" if="&can_edit?" param="edit-link">
        <ht key="project.actions.edit" name="#{name(:no_wrapper => true)}">
          Edit Project
        </ht>
      </a>
    </content-header:>

    <content-body: param>
      <section param="collection-section">
        <h3 param="collection-heading">
          <ht key="flow.collection.heading" count="&this.flows.count" >
            <human-collection-name collection="flows" your/>
          </ht>
        </h3>

        <collection:flows param/>

        <a:flows action="new" if="&can_create?(@project.flows)" param="new-link">
          <ht key="flow.actions.new" count="1">
            New Flow
          </ht>
        </a:flows>
      </section>
    </content-body:>

    <aside: param>
      <section param="project_memberships-collection-section">
        <h3 param="project_memberships-collection-heading">
          <ht key="project_membership.collection.heading" count="&this.project_memberships.count" >
            <human-collection-name collection="project_memberships" your/>
          </ht>
        </h3>
        <collection:project_memberships  param="project_memberships-collection"/>
      </section>
      <section param="sub_systems-collection-section">
        <h3 param="sub_systems-collection-heading">
          <ht key="sub_system.collection.heading" count="&this.sub_systems.count" >
            <human-collection-name collection="sub_systems" your/>
          </ht>
        </h3>
        <collection:sub_systems  param="sub_systems-collection"/>
      </section>
      <section param="functions-collection-section">
        <h3 param="functions-collection-heading">
          <ht key="function.collection.heading" count="&this.functions.count" >
            <human-collection-name collection="functions" your/>
          </ht>
        </h3>
        <collection:functions  param="functions-collection"/>
      </section>
    </aside:>

  </page>
</def>


<def tag="edit-page" for="Project">
  <page merge title="#{ht 'project.edit.title', :default=>['Edit Project'], :name => name(:no_wrapper => true) }">

    <body: class="edit-page project" param/>

    <content-header: param>
      <h2 param="heading">
        <ht key="project.edit.heading" name="#{name(:no_wrapper => true)}">
          Edit Project
        </ht>
      </h2>
      <delete-button label="#{ht 'project.actions.delete', :default=>['Remove This Project']}" param/>
    </content-header:>

    <content-body: param>
      <form param/>
    </content-body:>

  </page>
</def>



<def tag="new-for-owner-page" polymorphic/>
<def tag="new-for-owner-page" for="Project">
  <page merge title="#{ht 'project.new_for_owner.title', :default=>['New Project for']} #{name :with => @owner}">
    <body: class="new-for-owner-page  project" param/>

    <content-header: param>
      <h2 param="heading">
        <ht key="project.new_for_owner.heading">
          New Project
        </ht>
      </h2>
      <h3 param="subheading">
        <ht key="project.new_for_owner.subheading">
          For:
        </ht>
        <a with="&@owner"/>
      </h3>
    </content-header:>

    <content-body: param>
      <form owner="owner" method="post" param>
        <field-list: skip="owner"/>
        <submit: label="#{ht 'project.actions.create', :default=>['Create Project']}"/>
      </form>
    </content-body:>
  </page>
</def>





<!-- ====== StateMachineAction Pages ====== -->

<def tag="index-page" for="StateMachineAction">
  <page merge title="#{ht 'state_machine_action.index.title', :default=>[model.model_name.human(:count=>100)] }">
    <body: class="index-page state-machine-action" param/>

    <content-header: param>
      <h2 param="heading">
        <ht key="state_machine_action.index.heading">
          <model-name-human model="&model"/>
        </ht>
      </h2>

      <p param="count" if>
        <ht key="state_machine_action.collection.count" count="&collection_count">
          <count summary/>
        </ht>
      </p>
    </content-header:>

    <content-body: param>

      <page-nav param="top-page-nav"/>

      <collection param/>

      <page-nav param="bottom-page-nav"/>


    </content-body:>
  </page>
</def>


<def tag="new-page" for="StateMachineAction">
  <page merge title="#{ht 'state_machine_action.new.title', :default=>[' New State machine action'] }">
    <body: class="new-page state-machine-action" param/>

    <content-header: param>
      <h2 param="heading">
        <ht key="state_machine_action.new.heading">
          New State machine action
        </ht>
      </h2>
    </content-header:>

    <content-body: param>
      <form param>
        <submit: label="#{ht 'state_machine_action.actions.create', :default=>['Create State machine action']}"/>
      </form>
    </content-body:>
  </page>
</def>


<def tag="show-page" for="StateMachineAction">
  <page merge title="#{ht 'state_machine_action.show.title', :default=>['State machine action'], :name => name(:no_wrapper => true) }" without-aside >

    <body: class="show-page state-machine-action" param/>

    <content-header: param>
      <h2 param="heading">
        <ht key="state_machine_action.show.heading" name="#{name(:no_wrapper => true)}">
          State machine action <name/>
        </ht>
      </h2>

      <record-flags fields="" param/>

      <a action="edit" if="&can_edit?" param="edit-link">
        <ht key="state_machine_action.actions.edit" name="#{name(:no_wrapper => true)}">
          Edit State machine action
        </ht>
      </a>
    </content-header:>

    <content-body: param>
      <view:description param="description" />
      <field-list fields="implementation, function_sub_system" param/>
    </content-body:>

  </page>
</def>


<def tag="edit-page" for="StateMachineAction">
  <page merge title="#{ht 'state_machine_action.edit.title', :default=>['Edit State machine action'], :name => name(:no_wrapper => true) }">

    <body: class="edit-page state-machine-action" param/>

    <content-header: param>
      <h2 param="heading">
        <ht key="state_machine_action.edit.heading" name="#{name(:no_wrapper => true)}">
          Edit State machine action
        </ht>
      </h2>
      <delete-button label="#{ht 'state_machine_action.actions.delete', :default=>['Remove This State machine action']}" param/>
    </content-header:>

    <content-body: param>
      <form param/>
    </content-body:>

  </page>
</def>



<def tag="new-for-function-sub-system-page" polymorphic/>
<def tag="new-for-function-sub-system-page" for="StateMachineAction">
  <page merge title="#{ht 'state_machine_action.new_for_owner.title', :default=>['New State machine action for']} #{name :with => @function_sub_system}">
    <body: class="new-for-owner-page  state-machine-action" param/>

    <content-header: param>
      <h2 param="heading">
        <ht key="state_machine_action.new_for_owner.heading">
          New State Machine Action
        </ht>
      </h2>
      <h3 param="subheading">
        <ht key="state_machine_action.new_for_owner.subheading">
          For:
        </ht>
        <a with="&@function_sub_system"/>
      </h3>
    </content-header:>

    <content-body: param>
      <form owner="function_sub_system" method="post" param>
        <field-list: skip="function_sub_system"/>
        <submit: label="#{ht 'state_machine_action.actions.create', :default=>['Create State machine action']}"/>
      </form>
    </content-body:>
  </page>
</def>





<!-- ====== StateMachineCondition Pages ====== -->

<def tag="index-page" for="StateMachineCondition">
  <page merge title="#{ht 'state_machine_condition.index.title', :default=>[model.model_name.human(:count=>100)] }">
    <body: class="index-page state-machine-condition" param/>

    <content-header: param>
      <h2 param="heading">
        <ht key="state_machine_condition.index.heading">
          <model-name-human model="&model"/>
        </ht>
      </h2>

      <p param="count" if>
        <ht key="state_machine_condition.collection.count" count="&collection_count">
          <count summary/>
        </ht>
      </p>
    </content-header:>

    <content-body: param>

      <page-nav param="top-page-nav"/>

      <collection param/>

      <page-nav param="bottom-page-nav"/>


    </content-body:>
  </page>
</def>


<def tag="new-page" for="StateMachineCondition">
  <page merge title="#{ht 'state_machine_condition.new.title', :default=>[' New State machine condition'] }">
    <body: class="new-page state-machine-condition" param/>

    <content-header: param>
      <h2 param="heading">
        <ht key="state_machine_condition.new.heading">
          New State machine condition
        </ht>
      </h2>
    </content-header:>

    <content-body: param>
      <form param>
        <submit: label="#{ht 'state_machine_condition.actions.create', :default=>['Create State machine condition']}"/>
      </form>
    </content-body:>
  </page>
</def>


<def tag="show-page" for="StateMachineCondition">
  <page merge title="#{ht 'state_machine_condition.show.title', :default=>['State machine condition'], :name => name(:no_wrapper => true) }" without-aside >

    <body: class="show-page state-machine-condition" param/>

    <content-header: param>
      <h2 param="heading">
        <ht key="state_machine_condition.show.heading" name="#{name(:no_wrapper => true)}">
          State machine condition <name/>
        </ht>
      </h2>

      <record-flags fields="" param/>

      <a action="edit" if="&can_edit?" param="edit-link">
        <ht key="state_machine_condition.actions.edit" name="#{name(:no_wrapper => true)}">
          Edit State machine condition
        </ht>
      </a>
    </content-header:>

    <content-body: param>
      <view:description param="description" />
      <field-list fields="implementation, function_sub_system" param/>
    </content-body:>

  </page>
</def>


<def tag="edit-page" for="StateMachineCondition">
  <page merge title="#{ht 'state_machine_condition.edit.title', :default=>['Edit State machine condition'], :name => name(:no_wrapper => true) }">

    <body: class="edit-page state-machine-condition" param/>

    <content-header: param>
      <h2 param="heading">
        <ht key="state_machine_condition.edit.heading" name="#{name(:no_wrapper => true)}">
          Edit State machine condition
        </ht>
      </h2>
      <delete-button label="#{ht 'state_machine_condition.actions.delete', :default=>['Remove This State machine condition']}" param/>
    </content-header:>

    <content-body: param>
      <form param/>
    </content-body:>

  </page>
</def>



<def tag="new-for-function-sub-system-page" polymorphic/>
<def tag="new-for-function-sub-system-page" for="StateMachineCondition">
  <page merge title="#{ht 'state_machine_condition.new_for_owner.title', :default=>['New State machine condition for']} #{name :with => @function_sub_system}">
    <body: class="new-for-owner-page  state-machine-condition" param/>

    <content-header: param>
      <h2 param="heading">
        <ht key="state_machine_condition.new_for_owner.heading">
          New State Machine Condition
        </ht>
      </h2>
      <h3 param="subheading">
        <ht key="state_machine_condition.new_for_owner.subheading">
          For:
        </ht>
        <a with="&@function_sub_system"/>
      </h3>
    </content-header:>

    <content-body: param>
      <form owner="function_sub_system" method="post" param>
        <field-list: skip="function_sub_system"/>
        <submit: label="#{ht 'state_machine_condition.actions.create', :default=>['Create State machine condition']}"/>
      </form>
    </content-body:>
  </page>
</def>





<!-- ====== StateMachineState Pages ====== -->

<def tag="index-page" for="StateMachineState">
  <page merge title="#{ht 'state_machine_state.index.title', :default=>[model.model_name.human(:count=>100)] }">
    <body: class="index-page state-machine-state" param/>

    <content-header: param>
      <h2 param="heading">
        <ht key="state_machine_state.index.heading">
          <model-name-human model="&model"/>
        </ht>
      </h2>

      <p param="count" if>
        <ht key="state_machine_state.collection.count" count="&collection_count">
          <count summary/>
        </ht>
      </p>
    </content-header:>

    <content-body: param>

      <page-nav param="top-page-nav"/>

      <collection param/>

      <page-nav param="bottom-page-nav"/>


    </content-body:>
  </page>
</def>


<def tag="new-page" for="StateMachineState">
  <page merge title="#{ht 'state_machine_state.new.title', :default=>[' New State machine state'] }">
    <body: class="new-page state-machine-state" param/>

    <content-header: param>
      <h2 param="heading">
        <ht key="state_machine_state.new.heading">
          New State machine state
        </ht>
      </h2>
    </content-header:>

    <content-body: param>
      <form param>
        <submit: label="#{ht 'state_machine_state.actions.create', :default=>['Create State machine state']}"/>
      </form>
    </content-body:>
  </page>
</def>


<def tag="show-page" for="StateMachineState">
  <page merge title="#{ht 'state_machine_state.show.title', :default=>['State machine state'], :name => name(:no_wrapper => true) }" >

    <body: class="show-page state-machine-state" param/>

    <content-header: param>
      <h2 param="heading">
        <ht key="state_machine_state.show.heading" name="#{name(:no_wrapper => true)}">
          State machine state <name/>
        </ht>
      </h2>

      <record-flags fields="initial, final" param/>

      <a action="edit" if="&can_edit?" param="edit-link">
        <ht key="state_machine_state.actions.edit" name="#{name(:no_wrapper => true)}">
          Edit State machine state
        </ht>
      </a>
    </content-header:>

    <content-body: param>
      <view:description param="description" />
      <field-list fields="state_machine" param/>
      <section param="collection-section">
        <h3 param="collection-heading">
          <ht key="state_machine_transition.collection.heading" count="&this.state_machine_transitions.count" >
            <human-collection-name collection="state_machine_transitions" your/>
          </ht>
        </h3>

        <collection:state_machine_transitions param/>

        <section param="add-to-collection" if="&can_create?(@state_machine_state.state_machine_transitions)">
          <h3 param="add-form-heading">
            <ht key="state_machine_transition.collection.add_form_heading" count="1">
              Add a State Machine Transition
            </ht>
          </h3>
          <form with="&@state_machine_transition || new_for_current_user(@state_machine_state.state_machine_transitions)" owner="state_machine_state" without-cancel param>
            <field-list: skip="state_machine_state"/>
            <submit: label="#{ht 'state_machine_transition.actions.add', :default=>['Add'] }"/>
          </form>
        </section>
      </section>
    </content-body:>

    <aside: param>
      <section param="sub_machines-collection-section">
        <h3 param="sub_machines-collection-heading">
          <ht key="state_machine.collection.heading" count="&this.sub_machines.count" >
            <human-collection-name collection="sub_machines" your/>
          </ht>
        </h3>
        <collection:sub_machines  param="sub_machines-collection"/>
      </section>
    </aside:>

  </page>
</def>


<def tag="edit-page" for="StateMachineState">
  <page merge title="#{ht 'state_machine_state.edit.title', :default=>['Edit State machine state'], :name => name(:no_wrapper => true) }">

    <body: class="edit-page state-machine-state" param/>

    <content-header: param>
      <h2 param="heading">
        <ht key="state_machine_state.edit.heading" name="#{name(:no_wrapper => true)}">
          Edit State machine state
        </ht>
      </h2>
      <delete-button label="#{ht 'state_machine_state.actions.delete', :default=>['Remove This State machine state']}" param/>
    </content-header:>

    <content-body: param>
      <form param/>
    </content-body:>

  </page>
</def>



<def tag="new-for-state-machine-page" polymorphic/>
<def tag="new-for-state-machine-page" for="StateMachineState">
  <page merge title="#{ht 'state_machine_state.new_for_owner.title', :default=>['New State machine state for']} #{name :with => @state_machine}">
    <body: class="new-for-owner-page  state-machine-state" param/>

    <content-header: param>
      <h2 param="heading">
        <ht key="state_machine_state.new_for_owner.heading">
          New State Machine State
        </ht>
      </h2>
      <h3 param="subheading">
        <ht key="state_machine_state.new_for_owner.subheading">
          For:
        </ht>
        <a with="&@state_machine"/>
      </h3>
    </content-header:>

    <content-body: param>
      <form owner="state_machine" method="post" param>
        <field-list: skip="state_machine"/>
        <submit: label="#{ht 'state_machine_state.actions.create', :default=>['Create State machine state']}"/>
      </form>
    </content-body:>
  </page>
</def>





<!-- ====== StateMachineTransitionAction Pages ====== -->

<def tag="index-page" for="StateMachineTransitionAction">
  <page merge title="#{ht 'state_machine_transition_action.index.title', :default=>[model.model_name.human(:count=>100)] }">
    <body: class="index-page state-machine-transition-action" param/>

    <content-header: param>
      <h2 param="heading">
        <ht key="state_machine_transition_action.index.heading">
          <model-name-human model="&model"/>
        </ht>
      </h2>

      <p param="count" if>
        <ht key="state_machine_transition_action.collection.count" count="&collection_count">
          <count summary/>
        </ht>
      </p>
    </content-header:>

    <content-body: param>

      <page-nav param="top-page-nav"/>

      <collection param/>

      <page-nav param="bottom-page-nav"/>


      <div param="new-form">
        <h3 param="new-form-heading">
          <ht key="state_machine_transition_action.form.new.heading">New State machine transition action</ht>
        </h3>
        <form with="&@invalid_record || new_for_current_user(StateMachineTransitionAction)" param/>
      </div>

    </content-body:>
  </page>
</def>


<def tag="new-page" for="StateMachineTransitionAction">
  <page merge title="#{ht 'state_machine_transition_action.new.title', :default=>[' New State machine transition action'] }">
    <body: class="new-page state-machine-transition-action" param/>

    <content-header: param>
      <h2 param="heading">
        <ht key="state_machine_transition_action.new.heading">
          New State machine transition action
        </ht>
      </h2>
    </content-header:>

    <content-body: param>
      <form param>
        <submit: label="#{ht 'state_machine_transition_action.actions.create', :default=>['Create State machine transition action']}"/>
      </form>
    </content-body:>
  </page>
</def>


<def tag="show-page" for="StateMachineTransitionAction">
  <page merge title="#{ht 'state_machine_transition_action.show.title', :default=>['State machine transition action'], :name => name(:no_wrapper => true) }" without-aside >

    <body: class="show-page state-machine-transition-action" param/>

    <content-header: param>
      <a:state_machine_transition param="parent-link">&laquo; <ht key="state_machine_transition_action.actions.back_to_parent" parent="State machine transition" name="&this">Back to <name/></ht></a:state_machine_transition>
      <h2 param="heading">
        <ht key="state_machine_transition_action.show.heading" name="#{name(:no_wrapper => true)}">
          State machine transition action <name/>
        </ht>
      </h2>

      <record-flags fields="" param/>

      <a:state_machine_transition param="creator-link"/>
    </content-header:>

    <content-body: param>
      <field-list fields="state_machine_action" param/>
    </content-body:>

  </page>
</def>


<def tag="edit-page" for="StateMachineTransitionAction">
  <page merge title="#{ht 'state_machine_transition_action.edit.title', :default=>['Edit State machine transition action'], :name => name(:no_wrapper => true) }">

    <body: class="edit-page state-machine-transition-action" param/>

    <content-header: param>
      <h2 param="heading">
        <ht key="state_machine_transition_action.edit.heading" name="#{name(:no_wrapper => true)}">
          Edit State machine transition action
        </ht>
      </h2>
      <delete-button label="#{ht 'state_machine_transition_action.actions.delete', :default=>['Remove This State machine transition action']}" param/>
    </content-header:>

    <content-body: param>
      <form param/>
    </content-body:>

  </page>
</def>








<!-- ====== StateMachineTransition Pages ====== -->

<def tag="index-page" for="StateMachineTransition">
  <page merge title="#{ht 'state_machine_transition.index.title', :default=>[model.model_name.human(:count=>100)] }">
    <body: class="index-page state-machine-transition" param/>

    <content-header: param>
      <h2 param="heading">
        <ht key="state_machine_transition.index.heading">
          <model-name-human model="&model"/>
        </ht>
      </h2>

      <p param="count" if>
        <ht key="state_machine_transition.collection.count" count="&collection_count">
          <count summary/>
        </ht>
      </p>
    </content-header:>

    <content-body: param>
      <a action="new" to="&model" param="new-link">
        <ht key="state_machine_transition.actions.new">New State machine transition</ht>
      </a>

      <page-nav param="top-page-nav"/>

      <collection param/>

      <page-nav param="bottom-page-nav"/>


    </content-body:>
  </page>
</def>


<def tag="new-page" for="StateMachineTransition">
  <page merge title="#{ht 'state_machine_transition.new.title', :default=>[' New State machine transition'] }">
    <body: class="new-page state-machine-transition" param/>

    <content-header: param>
      <h2 param="heading">
        <ht key="state_machine_transition.new.heading">
          New State machine transition
        </ht>
      </h2>
    </content-header:>

    <content-body: param>
      <form param>
        <submit: label="#{ht 'state_machine_transition.actions.create', :default=>['Create State machine transition']}"/>
      </form>
    </content-body:>
  </page>
</def>


<def tag="show-page" for="StateMachineTransition">
  <page merge title="#{ht 'state_machine_transition.show.title', :default=>['State machine transition'], :name => name(:no_wrapper => true) }" without-aside >

    <body: class="show-page state-machine-transition" param/>

    <content-header: param>
      <a:state_machine_state param="parent-link">&laquo; <ht key="state_machine_transition.actions.back_to_parent" parent="State machine state" name="&this">Back to <name/></ht></a:state_machine_state>
      <h2 param="heading">
        <ht key="state_machine_transition.show.heading" name="#{name(:no_wrapper => true)}">
          State machine transition <name/>
        </ht>
      </h2>

      <record-flags fields="" param/>

      <a action="edit" if="&can_edit?" param="edit-link">
        <ht key="state_machine_transition.actions.edit" name="#{name(:no_wrapper => true)}">
          Edit State machine transition
        </ht>
      </a>
    </content-header:>

    <content-body: param>
      <view:description param="description" />
      <field-list fields="priority, destination_state, state_machine_condition" param/>
      <section param="collection-section">
        <h3 param="collection-heading">
          <ht key="state_machine_transition_action.collection.heading" count="&this.state_machine_transition_actions.count" >
            <human-collection-name collection="state_machine_transition_actions" your/>
          </ht>
        </h3>

        <collection:state_machine_transition_actions param/>

        <section param="add-to-collection" if="&can_create?(@state_machine_transition.state_machine_transition_actions)">
          <h3 param="add-form-heading">
            <ht key="state_machine_transition_action.collection.add_form_heading" count="1">
              Add a State Machine Transition Action
            </ht>
          </h3>
          <form with="&@state_machine_transition_action || new_for_current_user(@state_machine_transition.state_machine_transition_actions)" owner="state_machine_transition" without-cancel param>
            <field-list: skip="state_machine_transition"/>
            <submit: label="#{ht 'state_machine_transition_action.actions.add', :default=>['Add'] }"/>
          </form>
        </section>
      </section>
    </content-body:>

  </page>
</def>


<def tag="edit-page" for="StateMachineTransition">
  <page merge title="#{ht 'state_machine_transition.edit.title', :default=>['Edit State machine transition'], :name => name(:no_wrapper => true) }">

    <body: class="edit-page state-machine-transition" param/>

    <content-header: param>
      <h2 param="heading">
        <ht key="state_machine_transition.edit.heading" name="#{name(:no_wrapper => true)}">
          Edit State machine transition
        </ht>
      </h2>
      <delete-button label="#{ht 'state_machine_transition.actions.delete', :default=>['Remove This State machine transition']}" param/>
    </content-header:>

    <content-body: param>
      <form param/>
    </content-body:>

  </page>
</def>








<!-- ====== StateMachine Pages ====== -->

<def tag="index-page" for="StateMachine">
  <page merge title="#{ht 'state_machine.index.title', :default=>[model.model_name.human(:count=>100)] }">
    <body: class="index-page state-machine" param/>

    <content-header: param>
      <h2 param="heading">
        <ht key="state_machine.index.heading">
          <model-name-human model="&model"/>
        </ht>
      </h2>

      <p param="count" if>
        <ht key="state_machine.collection.count" count="&collection_count">
          <count summary/>
        </ht>
      </p>
    </content-header:>

    <content-body: param>
      <a action="new" to="&model" param="new-link">
        <ht key="state_machine.actions.new">New State machine</ht>
      </a>

      <page-nav param="top-page-nav"/>

      <collection param/>

      <page-nav param="bottom-page-nav"/>


    </content-body:>
  </page>
</def>


<def tag="new-page" for="StateMachine">
  <page merge title="#{ht 'state_machine.new.title', :default=>[' New State machine'] }">
    <body: class="new-page state-machine" param/>

    <content-header: param>
      <h2 param="heading">
        <ht key="state_machine.new.heading">
          New State machine
        </ht>
      </h2>
    </content-header:>

    <content-body: param>
      <form param>
        <submit: label="#{ht 'state_machine.actions.create', :default=>['Create State machine']}"/>
      </form>
    </content-body:>
  </page>
</def>


<def tag="show-page" for="StateMachine">
  <page merge title="#{ht 'state_machine.show.title', :default=>['State machine'], :name => name(:no_wrapper => true) }" >

    <body: class="show-page state-machine" param/>

    <content-header: param>
      <a:function_sub_system param="parent-link">&laquo; <ht key="state_machine.actions.back_to_parent" parent="Function sub system" name="&this">Back to <name/></ht></a:function_sub_system>
      <h2 param="heading">
        <ht key="state_machine.show.heading" name="#{name(:no_wrapper => true)}">
          State machine <name/>
        </ht>
      </h2>

      <record-flags fields="" param/>

      <a action="edit" if="&can_edit?" param="edit-link">
        <ht key="state_machine.actions.edit" name="#{name(:no_wrapper => true)}">
          Edit State machine
        </ht>
      </a>
    </content-header:>

    <content-body: param>
      <field-list fields="super_state" param/>
      <section param="collection-section">
        <h3 param="collection-heading">
          <ht key="state_machine_state.collection.heading" count="&this.state_machine_states.count" >
            <human-collection-name collection="state_machine_states" your/>
          </ht>
        </h3>

        <collection:state_machine_states param/>

        <a:state_machine_states action="new" if="&can_create?(@state_machine.state_machine_states)" param="new-link">
          <ht key="state_machine_state.actions.new" count="1">
            New State Machine State
          </ht>
        </a:state_machine_states>
      </section>
    </content-body:>

    <aside: param>
      <section param="sub_machines-collection-section">
        <h3 param="sub_machines-collection-heading">
          <ht key="state_machine.collection.heading" count="&this.sub_machines.count" >
            <human-collection-name collection="sub_machines" your/>
          </ht>
        </h3>
        <collection:sub_machines  param="sub_machines-collection"/>
      </section>
    </aside:>

  </page>
</def>


<def tag="edit-page" for="StateMachine">
  <page merge title="#{ht 'state_machine.edit.title', :default=>['Edit State machine'], :name => name(:no_wrapper => true) }">

    <body: class="edit-page state-machine" param/>

    <content-header: param>
      <h2 param="heading">
        <ht key="state_machine.edit.heading" name="#{name(:no_wrapper => true)}">
          Edit State machine
        </ht>
      </h2>
      <delete-button label="#{ht 'state_machine.actions.delete', :default=>['Remove This State machine']}" param/>
    </content-header:>

    <content-body: param>
      <form param/>
    </content-body:>

  </page>
</def>



<def tag="new-for-function-sub-system-page" polymorphic/>
<def tag="new-for-function-sub-system-page" for="StateMachine">
  <page merge title="#{ht 'state_machine.new_for_owner.title', :default=>['New State machine for']} #{name :with => @function_sub_system}">
    <body: class="new-for-owner-page  state-machine" param/>

    <content-header: param>
      <h2 param="heading">
        <ht key="state_machine.new_for_owner.heading">
          New State Machine
        </ht>
      </h2>
      <h3 param="subheading">
        <ht key="state_machine.new_for_owner.subheading">
          For:
        </ht>
        <a with="&@function_sub_system"/>
      </h3>
    </content-header:>

    <content-body: param>
      <form owner="function_sub_system" method="post" param>
        <field-list: skip="function_sub_system"/>
        <submit: label="#{ht 'state_machine.actions.create', :default=>['Create State machine']}"/>
      </form>
    </content-body:>
  </page>
</def>



<def tag="new-for-super-state-page" polymorphic/>
<def tag="new-for-super-state-page" for="StateMachine">
  <page merge title="#{ht 'state_machine.new_for_owner.title', :default=>['New State machine for']} #{name :with => @super_state}">
    <body: class="new-for-owner-page  state-machine" param/>

    <content-header: param>
      <h2 param="heading">
        <ht key="state_machine.new_for_owner.heading">
          New Sub Machine
        </ht>
      </h2>
      <h3 param="subheading">
        <ht key="state_machine.new_for_owner.subheading">
          For:
        </ht>
        <a with="&@super_state"/>
      </h3>
    </content-header:>

    <content-body: param>
      <form owner="super_state" method="post" param>
        <field-list: skip="super_state"/>
        <submit: label="#{ht 'state_machine.actions.create', :default=>['Create State machine']}"/>
      </form>
    </content-body:>
  </page>
</def>





<!-- ====== SubSystemFlow Pages ====== -->

<def tag="index-page" for="SubSystemFlow">
  <page merge title="#{ht 'sub_system_flow.index.title', :default=>[model.model_name.human(:count=>100)] }">
    <body: class="index-page sub-system-flow" param/>

    <content-header: param>
      <h2 param="heading">
        <ht key="sub_system_flow.index.heading">
          <model-name-human model="&model"/>
        </ht>
      </h2>

      <p param="count" if>
        <ht key="sub_system_flow.collection.count" count="&collection_count">
          <count summary/>
        </ht>
      </p>
    </content-header:>

    <content-body: param>
      <a action="new" to="&model" param="new-link">
        <ht key="sub_system_flow.actions.new">New Sub system flow</ht>
      </a>

      <page-nav param="top-page-nav"/>

      <collection param/>

      <page-nav param="bottom-page-nav"/>


    </content-body:>
  </page>
</def>


<def tag="new-page" for="SubSystemFlow">
  <page merge title="#{ht 'sub_system_flow.new.title', :default=>[' New Sub system flow'] }">
    <body: class="new-page sub-system-flow" param/>

    <content-header: param>
      <h2 param="heading">
        <ht key="sub_system_flow.new.heading">
          New Sub system flow
        </ht>
      </h2>
    </content-header:>

    <content-body: param>
      <form param>
        <submit: label="#{ht 'sub_system_flow.actions.create', :default=>['Create Sub system flow']}"/>
      </form>
    </content-body:>
  </page>
</def>


<def tag="show-page" for="SubSystemFlow">
  <page merge title="#{ht 'sub_system_flow.show.title', :default=>['Sub system flow'], :name => name(:no_wrapper => true) }" without-aside >

    <body: class="show-page sub-system-flow" param/>

    <content-header: param>
      <a:connector param="parent-link">&laquo; <ht key="sub_system_flow.actions.back_to_parent" parent="Connector" name="&this">Back to <name/></ht></a:connector>
      <h2 param="heading">
        <ht key="sub_system_flow.show.heading" name="#{name(:no_wrapper => true)}">
          Sub system flow <name/>
        </ht>
      </h2>

      <record-flags fields="outdir" param/>

      <a action="edit" if="&can_edit?" param="edit-link">
        <ht key="sub_system_flow.actions.edit" name="#{name(:no_wrapper => true)}">
          Edit Sub system flow
        </ht>
      </a>
    </content-header:>

    <content-body: param>
      <field-list fields="position, flow" param/>
    </content-body:>

  </page>
</def>


<def tag="edit-page" for="SubSystemFlow">
  <page merge title="#{ht 'sub_system_flow.edit.title', :default=>['Edit Sub system flow'], :name => name(:no_wrapper => true) }">

    <body: class="edit-page sub-system-flow" param/>

    <content-header: param>
      <h2 param="heading">
        <ht key="sub_system_flow.edit.heading" name="#{name(:no_wrapper => true)}">
          Edit Sub system flow
        </ht>
      </h2>
      <delete-button label="#{ht 'sub_system_flow.actions.delete', :default=>['Remove This Sub system flow']}" param/>
    </content-header:>

    <content-body: param>
      <form param/>
    </content-body:>

  </page>
</def>








<!-- ====== SubSystem Pages ====== -->

<def tag="index-page" for="SubSystem">
  <page merge title="#{ht 'sub_system.index.title', :default=>[model.model_name.human(:count=>100)] }">
    <body: class="index-page sub-system" param/>

    <content-header: param>
      <h2 param="heading">
        <ht key="sub_system.index.heading">
          <model-name-human model="&model"/>
        </ht>
      </h2>

      <p param="count" if>
        <ht key="sub_system.collection.count" count="&collection_count">
          <count summary/>
        </ht>
      </p>
    </content-header:>

    <content-body: param>
      <a action="new" to="&model" param="new-link">
        <ht key="sub_system.actions.new">New Sub system</ht>
      </a>

      <page-nav param="top-page-nav"/>

      <collection param/>

      <page-nav param="bottom-page-nav"/>


    </content-body:>
  </page>
</def>


<def tag="new-page" for="SubSystem">
  <page merge title="#{ht 'sub_system.new.title', :default=>[' New Sub system'] }">
    <body: class="new-page sub-system" param/>

    <content-header: param>
      <h2 param="heading">
        <ht key="sub_system.new.heading">
          New Sub system
        </ht>
      </h2>
    </content-header:>

    <content-body: param>
      <form param>
        <submit: label="#{ht 'sub_system.actions.create', :default=>['Create Sub system']}"/>
      </form>
    </content-body:>
  </page>
</def>


<def tag="show-page" for="SubSystem">
  <page merge title="#{ht 'sub_system.show.title', :default=>['Sub system'], :name => name(:no_wrapper => true) }" >

    <body: class="show-page sub-system" param/>

    <content-header: param>
      <h2 param="heading">
        <ht key="sub_system.show.heading" name="#{name(:no_wrapper => true)}">
          Sub system <name/>
        </ht>
      </h2>

      <record-flags fields="" param/>

      <a:parent param="creator-link"/>

      <a action="edit" if="&can_edit?" param="edit-link">
        <ht key="sub_system.actions.edit" name="#{name(:no_wrapper => true)}">
          Edit Sub system
        </ht>
      </a>
    </content-header:>

    <content-body: param>
      <field-list fields="abbrev, position, layer, project, root" param/>
      <section param="collection-section">
        <h3 param="collection-heading">
          <ht key="connector.collection.heading" count="&this.connectors.count" >
            <human-collection-name collection="connectors" your/>
          </ht>
        </h3>

        <sortable-collection:connectors param="collection"/>

        <a:connectors action="new" if="&can_create?(@sub_system.connectors)" param="new-link">
          <ht key="connector.actions.new" count="1">
            New Connector
          </ht>
        </a:connectors>
      </section>
    </content-body:>

    <aside: param>
      <section param="children-collection-section">
        <h3 param="children-collection-heading">
          <ht key="sub_system.collection.heading" count="&this.children.count" >
            <human-collection-name collection="children" your/>
          </ht>
        </h3>
        <collection:children  param="children-collection"/>
      </section>
      <section param="function_sub_systems-collection-section">
        <h3 param="function_sub_systems-collection-heading">
          <ht key="function_sub_system.collection.heading" count="&this.function_sub_systems.count" >
            <human-collection-name collection="function_sub_systems" your/>
          </ht>
        </h3>
        <collection:function_sub_systems  param="function_sub_systems-collection"/>
      </section>
    </aside:>

  </page>
</def>


<def tag="edit-page" for="SubSystem">
  <page merge title="#{ht 'sub_system.edit.title', :default=>['Edit Sub system'], :name => name(:no_wrapper => true) }">

    <body: class="edit-page sub-system" param/>

    <content-header: param>
      <h2 param="heading">
        <ht key="sub_system.edit.heading" name="#{name(:no_wrapper => true)}">
          Edit Sub system
        </ht>
      </h2>
      <delete-button label="#{ht 'sub_system.actions.delete', :default=>['Remove This Sub system']}" param/>
    </content-header:>

    <content-body: param>
      <form param/>
    </content-body:>

  </page>
</def>



<def tag="new-for-parent-page" polymorphic/>
<def tag="new-for-parent-page" for="SubSystem">
  <page merge title="#{ht 'sub_system.new_for_owner.title', :default=>['New Sub system for']} #{name :with => @parent}">
    <body: class="new-for-owner-page  sub-system" param/>

    <content-header: param>
      <h2 param="heading">
        <ht key="sub_system.new_for_owner.heading">
          New Child
        </ht>
      </h2>
      <h3 param="subheading">
        <ht key="sub_system.new_for_owner.subheading">
          For:
        </ht>
        <a with="&@parent"/>
      </h3>
    </content-header:>

    <content-body: param>
      <form owner="parent" method="post" param>
        <field-list: skip="parent"/>
        <submit: label="#{ht 'sub_system.actions.create', :default=>['Create Sub system']}"/>
      </form>
    </content-body:>
  </page>
</def>



<def tag="new-for-project-page" polymorphic/>
<def tag="new-for-project-page" for="SubSystem">
  <page merge title="#{ht 'sub_system.new_for_owner.title', :default=>['New Sub system for']} #{name :with => @project}">
    <body: class="new-for-owner-page  sub-system" param/>

    <content-header: param>
      <h2 param="heading">
        <ht key="sub_system.new_for_owner.heading">
          New Sub System
        </ht>
      </h2>
      <h3 param="subheading">
        <ht key="sub_system.new_for_owner.subheading">
          For:
        </ht>
        <a with="&@project"/>
      </h3>
    </content-header:>

    <content-body: param>
      <form owner="project" method="post" param>
        <field-list: skip="project"/>
        <submit: label="#{ht 'sub_system.actions.create', :default=>['Create Sub system']}"/>
      </form>
    </content-body:>
  </page>
</def>





<!-- ====== User Pages ====== -->

<def tag="index-page" for="User">
  <page merge title="#{ht 'user.index.title', :default=>[model.model_name.human(:count=>100)] }">
    <body: class="index-page user" param/>

    <content-header: param>
      <h2 param="heading">
        <ht key="user.index.heading">
          <model-name-human model="&model"/>
        </ht>
      </h2>

      <p param="count" if>
        <ht key="user.collection.count" count="&collection_count">
          <count summary/>
        </ht>
      </p>
    </content-header:>

    <content-body: param>

      <page-nav param="top-page-nav"/>

      <collection param/>

      <page-nav param="bottom-page-nav"/>


      <div param="new-form">
        <h3 param="new-form-heading">
          <ht key="user.form.new.heading">New User</ht>
        </h3>
        <form with="&@invalid_record || new_for_current_user(User)" param/>
      </div>

    </content-body:>
  </page>
</def>


<def tag="new-page" for="User">
  <page merge title="#{ht 'user.new.title', :default=>[' New User'] }">
    <body: class="new-page user" param/>

    <content-header: param>
      <h2 param="heading">
        <ht key="user.new.heading">
          New User
        </ht>
      </h2>
    </content-header:>

    <content-body: param>
      <form param>
        <submit: label="#{ht 'user.actions.create', :default=>['Create User']}"/>
      </form>
    </content-body:>
  </page>
</def>


<def tag="show-page" for="User">
  <page merge title="#{ht 'user.show.title', :default=>['User'], :name => name(:no_wrapper => true) }" without-aside >

    <body: class="show-page user" param/>

    <content-header: param>
      <h2 param="heading">
        <ht key="user.show.heading" name="#{name(:no_wrapper => true)}">
          User <name/>
        </ht>
      </h2>

      <record-flags fields="administrator" param/>

      <a action="edit" if="&can_edit?" param="edit-link">
        <ht key="user.actions.edit" name="#{name(:no_wrapper => true)}">
          Edit User
        </ht>
      </a>
    </content-header:>

    <content-body: param>
      <field-list fields="email_address, state" param/>
    </content-body:>

  </page>
</def>


<def tag="edit-page" for="User">
  <page merge title="#{ht 'user.edit.title', :default=>['Edit User'], :name => name(:no_wrapper => true) }">

    <body: class="edit-page user" param/>

    <content-header: param>
      <h2 param="heading">
        <ht key="user.edit.heading" name="#{name(:no_wrapper => true)}">
          Edit User
        </ht>
      </h2>
      <delete-button label="#{ht 'user.actions.delete', :default=>['Remove This User']}" param/>
    </content-header:>

    <content-body: param>
      <form param/>
    </content-body:>

  </page>
</def>


<def tag="signup-page" polymorphic/>
<def tag="signup-page" for="User">

  <page title="#{ht 'user.signup.title', :default=>['Signup']}" merge>

    <body: class="lifecycle-start-page signup-page" param/>

    <content-header: param>
      <h2 param="heading">
        <ht key="user.signup.heading">
          Signup
        </ht>
      </h2>
    </content-header:>

    <content-body: param>
      <signup-form param="form"/>
    </content-body:>

  </page>
</def>

<def tag="activate-page" polymorphic/>
<def tag="activate-page" for="User">
  <page title="#{ht 'user.activate.title', :default=>['Activate']}" merge>

    <body: class="lifecycle-transition-page activate-page" param/>

    <content-header: param>
      <h2 param="heading">
        <ht key="user.activate.heading">
          Activate
        </ht>
      </h2>
    </content-header:>

    <content-body: param>
      <activate-form param="form"/>
    </content-body:>

  </page>
</def>

<def tag="reset-password-page" polymorphic/>
<def tag="reset-password-page" for="User">
  <page title="#{ht 'user.reset_password.title', :default=>['Reset Password']}" merge>

    <body: class="lifecycle-transition-page reset-password-page" param/>

    <content-header: param>
      <h2 param="heading">
        <ht key="user.reset_password.heading">
          Reset Password
        </ht>
      </h2>
    </content-header:>

    <content-body: param>
      <reset-password-form param="form"/>
    </content-body:>

  </page>
</def>


