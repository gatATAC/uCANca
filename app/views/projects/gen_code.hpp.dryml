#ifndef _<%= if(@project.prefix) then 
  @project.get_prefix+"_"
else
  ""
end %>DRE_H
#define _<%= if(@project.prefix) then 
  @project.get_prefix+"_"
else
  ""
end %>DRE_H

#include "<%= @project.get_prefix %>core_cfg.h"
#include "<%= @project.get_prefix %>core_types.h"


namespace <%= @project.get_prefix %>core
{

class <%= @project.get_prefix %>DRE
{
    public:

        /**
         * @brief Construct a new DRE object.
         */
        <%= @project.get_prefix %>DRE();

        // Initialization functions
        <%  @project.flows.find(:all).each{ |f| %>
          <%= f.to_cpp_io_setup_decl%><% } %>

        // Input / Output functions
        <%  @project.flows.find(:all).each{ |f| %>
          <%= f.to_cpp_io_decl%><% } %>

    private:
<%  @project.flows.find(:all).each{ |f|
#  <!--%= render :partial => 'flows/to_cpp_decl', :collection => @project.flows, :spacer_template => 'flows/separator'  %-->
%><%= f.to_cpp_decl%><% } %>

}

class <%= @project.get_prefix %>DIAG
{
    public:

        /**
         * @brief Construct a new DIAG object.
         */
        <%= @project.get_prefix %>DIAG();

        <%  @project.flows.find(:all).each{ |f|
        #  <!--%= render :partial => 'flows/to_cpp_decl', :collection => @project.flows, :spacer_template => 'flows/separator'  %-->
        %><%= f.to_diag_c_decl%><% } %>

};

}; // namespace reespirator 
#endif /* _DRE_H */
